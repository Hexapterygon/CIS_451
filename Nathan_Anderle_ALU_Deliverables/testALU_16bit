#> InputSetLoader: gvFormat.InputSetLoaderSimpleGVFormat

###########################################################################
#
# *Partially* test a 16-bit ALU.  (The student is responsible for
# designing a more comprehensive test.)  Note: This tests the ALU
# only.  It does not thoroughly test the underlying adder/subtracter
# and multiplier.
#
# Author: Zachary Kurmas
# (C) 2007 Grand Valley State University
#
##########################################################################

BEGIN add
  INPUTS
    InputA SIGNED(16) [1, -3]
    InputB SIGNED(16) [1, 2^15-1]
    Op 0
  OUTPUTS
    Output SIGNED(16) [2, -2^15, -2, 2^15-4]
    Overflow [0, 1, 0, 0]

BEGIN subtract
  INPUTS
    InputA SIGNED(16) [1, -3]
    InputB SIGNED(16) [-1, 2^15-1]
    Op 4
  OUTPUTS
    Output SIGNED(16) [2, -2^15+2, -2, 2^15-2]
    Overflow [0, 0, 0, 1]


BEGIN mult_overflow2
 INPUTS 
    InputA SIGNED(16) 1237 
    InputB SIGNED(16) [1251, -1257]
    Op 1
  OUTPUTS
    Output [0x9cdf, 0x4623]
    High [0x0017, 0xffe8] 
    Overflow [1, 1]

#
# WARNING:  Be sure to test pairs of values that 
# (1) Will make the subtractor overflow
# (2) Will give different answers for less than and less than unsigned
#
# Hint:  If intentionally switching your op codes doesn't cause a failure, then
# your tests aren't good enough.

BEGIN less_than_signed
  INPUTS
    InputA SIGNED(16) 5
    InputB SIGNED(16) [-1, 4, 6]
    Op 6
  OUTPUTS
    Output [0, 0, 1]
    Overflow 0

BEGIN less_than_signed0
  INPUTS
    InputA SIGNED(16) 0
    InputB SIGNED(16) [-1, 1, 20000]
    Op 6
  OUTPUTS
    Output [0, 1, 1]
    Overflow 0

BEGIN less_than_signed1
  INPUTS
    InputA SIGNED(16) 32766
    InputB SIGNED(16) [-32768, 32767 , 6]
    Op 6
  OUTPUTS
    Output [0, 1, 0]
    Overflow 0

BEGIN less_than_signed2
  INPUTS
    InputA SIGNED(16) -32768
    InputB SIGNED(16) [32767, -32767, 82]
    Op 6
  OUTPUTS
    Output [1, 1, 1]
    Overflow 0

BEGIN less_than_signed3
  INPUTS
    InputA SIGNED(16) 32767
    InputB SIGNED(16) [-30000, 30000, 48]
    Op 6
  OUTPUTS
    Output [0, 0, 0]
    Overflow 0

BEGIN less_than_signed4
  INPUTS
    InputA SIGNED(16) 28954
    InputB SIGNED(16) [28955, 31296, -11220]
    Op 6
  OUTPUTS
    Output [1, 1, 0]
    Overflow 0

BEGIN less_than_signed5
  INPUTS
    InputA SIGNED(16) -24761
    InputB SIGNED(16) [-1, -30590, 400]
    Op 6
  OUTPUTS
    Output [1, 0, 1]
    Overflow 0

BEGIN less_than_signed6
  INPUTS
    InputA SIGNED(16) -8
    InputB SIGNED(16) [-1, -300, 28]
    Op 6
  OUTPUTS
    Output [1, 0, 1]
    Overflow 0

BEGIN less_than_signed7
  INPUTS
    InputA SIGNED(16) 42
    InputB SIGNED(16) [0, 100, -25]
    Op 6
  OUTPUTS
    Output [0, 1, 0]
    Overflow 0

BEGIN less_than_unsigned
  INPUTS
    InputA 5
    InputB [1, 4, 6]
    Op 7
  OUTPUTS
    Output [0, 0, 1]
    Overflow 0

BEGIN less_than_unsigned1
  INPUTS
    InputA 30000
    InputB [31000, 32000, 29000]
    Op 7
  OUTPUTS
    Output [1, 1, 0]
    Overflow 0

BEGIN less_than_unsigned2
  INPUTS
    InputA 65534
    InputB [65535, 8, 42000]
    Op 7
  OUTPUTS
    Output [1, 0, 0]
    Overflow 0

BEGIN less_than_unsigned3
  INPUTS
    InputA 1
    InputB [65535, 30000, 0]
    Op 7
  OUTPUTS
    Output [1, 1, 0]
    Overflow 0

BEGIN less_than_unsigned4
  INPUTS
    InputA 22
    InputB [65400, 30000, 21]
    Op 7
  OUTPUTS
    Output [1, 1, 0]
    Overflow 0

BEGIN less_than_unsigned5
  INPUTS
    InputA 0
    InputB [1, 65535, 27934]
    Op 7
  OUTPUTS
    Output [1, 1, 1]
    Overflow 0


# last line

